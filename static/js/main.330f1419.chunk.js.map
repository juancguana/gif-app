{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","toUpperCase","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","catch","error","console","message","useFetchGifs","height","GifExpertApp","defaultCategories","ReactDOM","render","document","getElementById"],"mappings":"qMAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,UACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,UAerB,6BAAKT,EAAWY,oB,QCnBhBC,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAQC,UAAU,yCAAlB,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,qCAAaA,Q,uBCPNK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAcdY,GAdc,4CAAH,sDCKdM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACjB,ECH0B,SAACA,GAC3B,MAA0BrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,OAEVM,OAAM,SAAAC,GACPC,QAAQD,MAAMA,EAAME,cAErB,CAACvB,IAEGe,EDd2BS,CAAaxB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SACGI,EAASR,gBAEXsB,GACC,wBAAQlB,UAAU,2CAAlB,SACE,qBAAKC,IAAI,gBAAgB4B,OAAQ,IAAK3B,IAAI,WAG9C,sBAAMF,UAAU,YAAhB,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEhB1BgB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,EACnD,EAAoChD,mBAASgD,GAA7C,mBAAOxC,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACGS,EAAWqB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,EAAUU,GAAIV,GAAlCA,Y,MCRxB4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.330f1419.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length >= 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={handleInputChange} />\n      <h3>{inputValue.toUpperCase()}</h3>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport { AddCategory };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <figure className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <figcaption>{title}</figcaption>\n    </figure>\n  );\n};\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport { GifGridItem };\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=12&api_key=W61XaNXLmlSYZ2bN50dtgHiOklben61Q`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>\n        {category.toUpperCase()}\n      </h3>\n      {loading && (\n        <figure className='animate__animated animate__flash loading'>\n          <img src='/gif-logo.png' height={100} alt='Logo' />\n        </figure>\n      )}\n      <main className='card-grid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </main>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport { GifGrid };\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    }).catch(error => {\n      console.error(error.message);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ({ defaultCategories = [] }) => {\n  const [categories, setCategories] = useState(defaultCategories);\n\n  return (\n    <>\n      <h1>Gift Expert App</h1>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} id={category}/>\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport { GifExpertApp };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}